name: üöÄ Simple Production Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: üöÄ Deploy to Hostinger
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4

      - name: üîê Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.HOSTINGER_SSH_KEY }}

      - name: üöÄ Deploy to Server
        run: |
          echo "üöÄ Starting simple deployment..."
          
          SSH_HOST="${{ secrets.HOSTINGER_HOST }}"
          SSH_USER="${{ secrets.HOSTINGER_USER }}"
          SSH_PORT="${{ secrets.HOSTINGER_PORT || 22 }}"
          
          # Simple deployment in separate steps
          
          # Step 1: Stop and delete services
          echo "‚èπÔ∏è Stopping services..."
          ssh -o StrictHostKeyChecking=no -p ${SSH_PORT} ${SSH_USER}@${SSH_HOST} "cd /var/www/instacaresv2 && pm2 stop instacares || true && pm2 delete instacares || true"
          
          # Step 2: Backup production environment
          echo "üíæ Backing up production environment..."
          ssh -o StrictHostKeyChecking=no -p ${SSH_PORT} ${SSH_USER}@${SSH_HOST} "cd /var/www/instacaresv2 && cp .env .env.backup.$(date +%Y%m%d-%H%M%S) 2>/dev/null || true"
          
          # Step 3: Update code
          echo "üì• Updating code..."
          ssh -o StrictHostKeyChecking=no -p ${SSH_PORT} ${SSH_USER}@${SSH_HOST} "cd /var/www/instacaresv2 && git pull origin main"
          
          # Step 4: Restore production environment
          echo "üîÑ Restoring production environment..."
          ssh -o StrictHostKeyChecking=no -p ${SSH_PORT} ${SSH_USER}@${SSH_HOST} "cd /var/www/instacaresv2 && if [ -f .env.production ]; then cp .env.production .env; echo 'Production .env restored'; else echo 'No .env.production found - using default'; fi"
          
          # Step 5: Install dependencies
          echo "üì¶ Installing dependencies..."
          ssh -o StrictHostKeyChecking=no -p ${SSH_PORT} ${SSH_USER}@${SSH_HOST} "cd /var/www/instacaresv2 && npm install"
          
          # Step 6: Build
          echo "üèóÔ∏è Building..."
          ssh -o StrictHostKeyChecking=no -p ${SSH_PORT} ${SSH_USER}@${SSH_HOST} "cd /var/www/instacaresv2 && npm run build"
          
          # Step 7: Start services
          echo "‚ñ∂Ô∏è Starting services..."
          ssh -o StrictHostKeyChecking=no -p ${SSH_PORT} ${SSH_USER}@${SSH_HOST} "cd /var/www/instacaresv2 && PORT=3005 pm2 start npm --name instacares -- start && pm2 save"
          
          echo "‚úÖ Deployment completed!"